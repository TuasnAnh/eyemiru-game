{"ast":null,"code":"const createBasketRenderSystem = () => {\n  let basketFront, basketBack;\n  let F_HEIGHT, B_HEIGHT;\n  return {\n    init({\n      basketState\n    }, {\n      width,\n      assets,\n      productInBasketTex\n    }) {\n      let atlas = assets.gameAssets;\n      basketFront = atlas.findRegion(\"basket_front\", -1);\n      basketBack = atlas.findRegion(\"basket_back\", -1);\n      F_HEIGHT = basketState.width * basketFront.height / basketFront.width;\n      B_HEIGHT = basketState.width * basketBack.height / basketBack.width; // collection infos\n\n      const P_WIDTH = width / 9;\n\n      for (let i = 0; i < productInBasketTex; i++) {\n        const P_HEIGHT = P_WIDTH * productInBasketTex[i].image.height / productInBasketTex[i].image.width;\n        productInfos.push({\n          tex: productInBasketTex[i].image,\n          width: P_WIDTH,\n          height: P_HEIGHT\n        });\n      }\n    },\n\n    update(delta, {\n      basketState\n    }, {\n      batch,\n      width,\n      height,\n      camera\n    }) {\n      batch.setProjection(camera.combined);\n      batch.begin();\n      batch.setColor(1, 1, 1, 1);\n      basketBack.draw(batch, basketState.x - basketState.width / 2, basketState.y - B_HEIGHT, basketState.width, B_HEIGHT);\n      basketFront.draw(batch, basketState.x - basketState.width / 2, basketState.y - F_HEIGHT, basketState.width, F_HEIGHT);\n      batch.end();\n    }\n\n  };\n};\n\nexport default createBasketRenderSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/BasketRenderSystem.js"],"names":["createBasketRenderSystem","basketFront","basketBack","F_HEIGHT","B_HEIGHT","init","basketState","width","assets","productInBasketTex","atlas","gameAssets","findRegion","height","P_WIDTH","i","P_HEIGHT","image","productInfos","push","tex","update","delta","batch","camera","setProjection","combined","begin","setColor","draw","x","y","end"],"mappings":"AAAA,MAAMA,wBAAwB,GAAG,MAAM;AACrC,MAAIC,WAAJ,EAAiBC,UAAjB;AACA,MAAIC,QAAJ,EAAcC,QAAd;AACA,SAAO;AACLC,IAAAA,IAAI,CAAC;AAAEC,MAAAA;AAAF,KAAD,EAAkB;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,KAAlB,EAAyD;AAC3D,UAAIC,KAAK,GAAGF,MAAM,CAACG,UAAnB;AACAV,MAAAA,WAAW,GAAGS,KAAK,CAACE,UAAN,CAAiB,cAAjB,EAAiC,CAAC,CAAlC,CAAd;AACAV,MAAAA,UAAU,GAAGQ,KAAK,CAACE,UAAN,CAAiB,aAAjB,EAAgC,CAAC,CAAjC,CAAb;AAEAT,MAAAA,QAAQ,GAAIG,WAAW,CAACC,KAAZ,GAAoBN,WAAW,CAACY,MAAjC,GAA2CZ,WAAW,CAACM,KAAlE;AACAH,MAAAA,QAAQ,GAAIE,WAAW,CAACC,KAAZ,GAAoBL,UAAU,CAACW,MAAhC,GAA0CX,UAAU,CAACK,KAAhE,CAN2D,CAQ3D;;AACA,YAAMO,OAAO,GAAGP,KAAK,GAAG,CAAxB;;AAEA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,kBAApB,EAAwCM,CAAC,EAAzC,EAA6C;AAC3C,cAAMC,QAAQ,GACXF,OAAO,GAAGL,kBAAkB,CAACM,CAAD,CAAlB,CAAsBE,KAAtB,CAA4BJ,MAAvC,GACAJ,kBAAkB,CAACM,CAAD,CAAlB,CAAsBE,KAAtB,CAA4BV,KAF9B;AAIAW,QAAAA,YAAY,CAACC,IAAb,CAAkB;AAChBC,UAAAA,GAAG,EAAEX,kBAAkB,CAACM,CAAD,CAAlB,CAAsBE,KADX;AAEhBV,UAAAA,KAAK,EAAEO,OAFS;AAGhBD,UAAAA,MAAM,EAAEG;AAHQ,SAAlB;AAKD;AACF,KAvBI;;AAyBLK,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEhB,MAAAA;AAAF,KAAR,EAAyB;AAAEiB,MAAAA,KAAF;AAAShB,MAAAA,KAAT;AAAgBM,MAAAA,MAAhB;AAAwBW,MAAAA;AAAxB,KAAzB,EAA2D;AAC/DD,MAAAA,KAAK,CAACE,aAAN,CAAoBD,MAAM,CAACE,QAA3B;AACAH,MAAAA,KAAK,CAACI,KAAN;AACAJ,MAAAA,KAAK,CAACK,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AAEA1B,MAAAA,UAAU,CAAC2B,IAAX,CACEN,KADF,EAEEjB,WAAW,CAACwB,CAAZ,GAAgBxB,WAAW,CAACC,KAAZ,GAAoB,CAFtC,EAGED,WAAW,CAACyB,CAAZ,GAAgB3B,QAHlB,EAIEE,WAAW,CAACC,KAJd,EAKEH,QALF;AAQAH,MAAAA,WAAW,CAAC4B,IAAZ,CACEN,KADF,EAEEjB,WAAW,CAACwB,CAAZ,GAAgBxB,WAAW,CAACC,KAAZ,GAAoB,CAFtC,EAGED,WAAW,CAACyB,CAAZ,GAAgB5B,QAHlB,EAIEG,WAAW,CAACC,KAJd,EAKEJ,QALF;AAQAoB,MAAAA,KAAK,CAACS,GAAN;AACD;;AA/CI,GAAP;AAiDD,CApDD;;AAsDA,eAAehC,wBAAf","sourcesContent":["const createBasketRenderSystem = () => {\r\n  let basketFront, basketBack;\r\n  let F_HEIGHT, B_HEIGHT;\r\n  return {\r\n    init({ basketState }, { width, assets, productInBasketTex }) {\r\n      let atlas = assets.gameAssets;\r\n      basketFront = atlas.findRegion(\"basket_front\", -1);\r\n      basketBack = atlas.findRegion(\"basket_back\", -1);\r\n\r\n      F_HEIGHT = (basketState.width * basketFront.height) / basketFront.width;\r\n      B_HEIGHT = (basketState.width * basketBack.height) / basketBack.width;\r\n\r\n      // collection infos\r\n      const P_WIDTH = width / 9;\r\n\r\n      for (let i = 0; i < productInBasketTex; i++) {\r\n        const P_HEIGHT =\r\n          (P_WIDTH * productInBasketTex[i].image.height) /\r\n          productInBasketTex[i].image.width;\r\n\r\n        productInfos.push({\r\n          tex: productInBasketTex[i].image,\r\n          width: P_WIDTH,\r\n          height: P_HEIGHT,\r\n        });\r\n      }\r\n    },\r\n\r\n    update(delta, { basketState }, { batch, width, height, camera }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n\r\n      basketBack.draw(\r\n        batch,\r\n        basketState.x - basketState.width / 2,\r\n        basketState.y - B_HEIGHT,\r\n        basketState.width,\r\n        B_HEIGHT\r\n      );\r\n\r\n      basketFront.draw(\r\n        batch,\r\n        basketState.x - basketState.width / 2,\r\n        basketState.y - F_HEIGHT,\r\n        basketState.width,\r\n        F_HEIGHT\r\n      );\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBasketRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}