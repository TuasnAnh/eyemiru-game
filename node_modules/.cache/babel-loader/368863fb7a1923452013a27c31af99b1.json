{"ast":null,"code":"const createBackGroundRenderSystem = () => {\n  let bg, border, logo, scoreTex;\n  let BG_WIDTH, BG_HEIGHT, B_WIDTH, B_HEIGHT, LOGO_INFO, SCORE_INFO;\n  return {\n    init(worldState, {\n      width,\n      height,\n      assets\n    }) {\n      let atlas = assets.gameAssets;\n      bg = atlas.findRegion(\"BG\", -1);\n      border = atlas.findRegion(\"border\", -1);\n      logo = atlas.findRegion(\"logo\", -1);\n      scoreTex = atlas.findRegion(\"score\", 1);\n      BG_HEIGHT = height;\n      BG_WIDTH = BG_HEIGHT * bg.width / bg.height;\n      B_HEIGHT = height;\n      B_WIDTH = B_HEIGHT * border.width / border.height;\n    },\n\n    update(delta, worldState, {\n      batch,\n      width,\n      height,\n      camera\n    }) {\n      batch.setProjection(camera.combined);\n      batch.begin();\n      batch.setColor(1, 1, 1, 1);\n      bg.draw(batch, width / 2 - BG_WIDTH / 2, 0, BG_WIDTH, BG_HEIGHT);\n      border.draw(batch, 0, 0, B_WIDTH, B_HEIGHT);\n      border.draw(batch, width - B_WIDTH, 0, B_WIDTH, B_HEIGHT);\n      batch.end();\n    }\n\n  };\n};\n\nexport default createBackGroundRenderSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/BgRenderSystem.js"],"names":["createBackGroundRenderSystem","bg","border","logo","scoreTex","BG_WIDTH","BG_HEIGHT","B_WIDTH","B_HEIGHT","LOGO_INFO","SCORE_INFO","init","worldState","width","height","assets","atlas","gameAssets","findRegion","update","delta","batch","camera","setProjection","combined","begin","setColor","draw","end"],"mappings":"AAAA,MAAMA,4BAA4B,GAAG,MAAM;AACzC,MAAIC,EAAJ,EAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,QAAtB;AACA,MAAIC,QAAJ,EAAcC,SAAd,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4CC,SAA5C,EAAuDC,UAAvD;AACA,SAAO;AACLC,IAAAA,IAAI,CAACC,UAAD,EAAa;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,KAAb,EAAwC;AAC1C,UAAIC,KAAK,GAAGD,MAAM,CAACE,UAAnB;AAEAhB,MAAAA,EAAE,GAAGe,KAAK,CAACE,UAAN,CAAiB,IAAjB,EAAuB,CAAC,CAAxB,CAAL;AACAhB,MAAAA,MAAM,GAAGc,KAAK,CAACE,UAAN,CAAiB,QAAjB,EAA2B,CAAC,CAA5B,CAAT;AACAf,MAAAA,IAAI,GAAGa,KAAK,CAACE,UAAN,CAAiB,MAAjB,EAAyB,CAAC,CAA1B,CAAP;AACAd,MAAAA,QAAQ,GAAGY,KAAK,CAACE,UAAN,CAAiB,OAAjB,EAA0B,CAA1B,CAAX;AAEAZ,MAAAA,SAAS,GAAGQ,MAAZ;AACAT,MAAAA,QAAQ,GAAIC,SAAS,GAAGL,EAAE,CAACY,KAAhB,GAAyBZ,EAAE,CAACa,MAAvC;AAEAN,MAAAA,QAAQ,GAAGM,MAAX;AACAP,MAAAA,OAAO,GAAIC,QAAQ,GAAGN,MAAM,CAACW,KAAnB,GAA4BX,MAAM,CAACY,MAA7C;AACD,KAdI;;AAeLK,IAAAA,MAAM,CAACC,KAAD,EAAQR,UAAR,EAAoB;AAAES,MAAAA,KAAF;AAASR,MAAAA,KAAT;AAAgBC,MAAAA,MAAhB;AAAwBQ,MAAAA;AAAxB,KAApB,EAAsD;AAC1DD,MAAAA,KAAK,CAACE,aAAN,CAAoBD,MAAM,CAACE,QAA3B;AACAH,MAAAA,KAAK,CAACI,KAAN;AACAJ,MAAAA,KAAK,CAACK,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACAzB,MAAAA,EAAE,CAAC0B,IAAH,CAAQN,KAAR,EAAeR,KAAK,GAAG,CAAR,GAAYR,QAAQ,GAAG,CAAtC,EAAyC,CAAzC,EAA4CA,QAA5C,EAAsDC,SAAtD;AAEAJ,MAAAA,MAAM,CAACyB,IAAP,CAAYN,KAAZ,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBd,OAAzB,EAAkCC,QAAlC;AACAN,MAAAA,MAAM,CAACyB,IAAP,CAAYN,KAAZ,EAAmBR,KAAK,GAAGN,OAA3B,EAAoC,CAApC,EAAuCA,OAAvC,EAAgDC,QAAhD;AAEAa,MAAAA,KAAK,CAACO,GAAN;AACD;;AAzBI,GAAP;AA2BD,CA9BD;;AAgCA,eAAe5B,4BAAf","sourcesContent":["const createBackGroundRenderSystem = () => {\r\n  let bg, border, logo, scoreTex;\r\n  let BG_WIDTH, BG_HEIGHT, B_WIDTH, B_HEIGHT, LOGO_INFO, SCORE_INFO;\r\n  return {\r\n    init(worldState, { width, height, assets }) {\r\n      let atlas = assets.gameAssets;\r\n\r\n      bg = atlas.findRegion(\"BG\", -1);\r\n      border = atlas.findRegion(\"border\", -1);\r\n      logo = atlas.findRegion(\"logo\", -1);\r\n      scoreTex = atlas.findRegion(\"score\", 1);\r\n\r\n      BG_HEIGHT = height;\r\n      BG_WIDTH = (BG_HEIGHT * bg.width) / bg.height;\r\n\r\n      B_HEIGHT = height;\r\n      B_WIDTH = (B_HEIGHT * border.width) / border.height;\r\n    },\r\n    update(delta, worldState, { batch, width, height, camera }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      bg.draw(batch, width / 2 - BG_WIDTH / 2, 0, BG_WIDTH, BG_HEIGHT);\r\n\r\n      border.draw(batch, 0, 0, B_WIDTH, B_HEIGHT);\r\n      border.draw(batch, width - B_WIDTH, 0, B_WIDTH, B_HEIGHT);\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBackGroundRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}