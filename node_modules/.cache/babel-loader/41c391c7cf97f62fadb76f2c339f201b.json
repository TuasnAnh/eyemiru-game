{"ast":null,"code":"import { Vector2 } from \"gdxjs\";\n\nconst createBasketCollideSystem = () => {\n  return {\n    update(delta, worldState, {\n      width,\n      height\n    }) {\n      const {\n        basketState,\n        products,\n        collection,\n        life,\n        starList,\n        vitaminACounter\n      } = worldState;\n      let got = false;\n\n      for (let i = products.length - 1; i >= 0; i--) {\n        if (products[i].x > basketState.x - basketState.width / 2 && products[i].x < basketState.x + basketState.width / 2 && products[i].y > basketState.y - basketState.height * 0.7 && products[i].y < basketState.y - basketState.height * 0.3) {\n          if (!products[i].isFake && !worldState.correctCatch) {\n            console.log(\"hit\");\n            worldState.correctCatch = true;\n\n            for (let j = 0; j < collection.length; j++) {\n              if (collection[j].type === products[i].type && !collection[j].enable && !got) {\n                got = true;\n                collection[j].enable = true;\n              }\n            } // 0: 1 star --- 1: 3 stars\n\n\n            if (products[i].type === 2) {\n              if (vitaminAList.length <= 5) vitaminAList.push();\n              const time = 0.3;\n              const speedX = basketState.width / time;\n              const scaleSpeed = (1 - 0) / (2 / 3 * time);\n              starList.push({\n                type: 0,\n                stateTime: 0,\n                time,\n                scale: 0,\n                scaleSpeed,\n                speedX,\n                accuX: 0 // value\n\n              });\n            } else {\n              const stateTime = [0, 0, 0];\n              const scale = [1, 1, 1];\n              const time = [Math.random() * (0.4 - 0.3) + 0.3, Math.random() * (0.4 - 0.3) + 0.3, Math.random() * (0.4 - 0.3) + 0.3];\n              const position = [new Vector2(basketState.x, basketState.y - basketState.height), new Vector2(basketState.x, basketState.y - basketState.height), new Vector2(basketState.x, basketState.y - basketState.height)];\n              const target = [new Vector2(basketState.x - Math.random() * (width / 3 - width / 7) + width / 7, Math.random() * (height * 6.5 / 8 - height * 5 / 8) + height * 5 / 8), new Vector2(basketState.x - Math.random() * (width / 20), Math.random() * (height * 6.5 / 8 - height * 5 / 8) + height * 5 / 8), new Vector2(basketState.x + Math.random() * (width / 3 - width / 7) + width / 7, Math.random() * (height * 6.5 / 8 - height * 5 / 8) + height * 5 / 8)];\n              let speed = [];\n              let scaleSpeed = [];\n\n              for (let i = 0; i < time.length; i++) {\n                speed.push(target[i].distance(position[i]) / time[i]);\n                scaleSpeed.push(1 / time[i]);\n              }\n\n              starList.push({\n                type: 1,\n                time,\n                scale,\n                stateTime,\n                position,\n                target,\n                speed,\n                scaleSpeed\n              });\n            }\n\n            products.splice(i, 1);\n            break; // if there is any one match => break the loop\n          } //wrong catch\n\n\n          if (products[i].isFake) {\n            console.log(\"miss\");\n            life[worldState.lifeIndex].open = false;\n            worldState.lifeIndex = Math.max(0, worldState.lifeIndex -= 1);\n            worldState.stunScreen.check = true;\n            products.splice(i, 1);\n          }\n        }\n      }\n    }\n\n  };\n};\n\nexport default createBasketCollideSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/BasketCollideSystem.js"],"names":["Vector2","createBasketCollideSystem","update","delta","worldState","width","height","basketState","products","collection","life","starList","vitaminACounter","got","i","length","x","y","isFake","correctCatch","console","log","j","type","enable","vitaminAList","push","time","speedX","scaleSpeed","stateTime","scale","accuX","Math","random","position","target","speed","distance","splice","lifeIndex","open","max","stunScreen","check"],"mappings":"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","sourcesContent":["import { Vector2 } from \"gdxjs\";\r\n\r\nconst createBasketCollideSystem = () => {\r\n  return {\r\n    update(delta, worldState, { width, height }) {\r\n      const {\r\n        basketState,\r\n        products,\r\n        collection,\r\n        life,\r\n        starList,\r\n        vitaminACounter,\r\n      } = worldState;\r\n\r\n      let got = false;\r\n      for (let i = products.length - 1; i >= 0; i--) {\r\n        if (\r\n          products[i].x > basketState.x - basketState.width / 2 &&\r\n          products[i].x < basketState.x + basketState.width / 2 &&\r\n          products[i].y > basketState.y - basketState.height * 0.7 &&\r\n          products[i].y < basketState.y - basketState.height * 0.3\r\n        ) {\r\n          if (!products[i].isFake && !worldState.correctCatch) {\r\n            console.log(\"hit\");\r\n            worldState.correctCatch = true;\r\n            for (let j = 0; j < collection.length; j++) {\r\n              if (\r\n                collection[j].type === products[i].type &&\r\n                !collection[j].enable &&\r\n                !got\r\n              ) {\r\n                got = true;\r\n                collection[j].enable = true;\r\n              }\r\n            }\r\n\r\n            // 0: 1 star --- 1: 3 stars\r\n            if (products[i].type === 2) {\r\n              if (vitaminAList.length <= 5) vitaminAList.push();\r\n              const time = 0.3;\r\n              const speedX = basketState.width / time;\r\n              const scaleSpeed = (1 - 0) / ((2 / 3) * time);\r\n              starList.push({\r\n                type: 0,\r\n                stateTime: 0,\r\n                time,\r\n                scale: 0,\r\n                scaleSpeed,\r\n                speedX,\r\n                accuX: 0,\r\n                // value\r\n              });\r\n            } else {\r\n              const stateTime = [0, 0, 0];\r\n              const scale = [1, 1, 1];\r\n              const time = [\r\n                Math.random() * (0.4 - 0.3) + 0.3,\r\n                Math.random() * (0.4 - 0.3) + 0.3,\r\n                Math.random() * (0.4 - 0.3) + 0.3,\r\n              ];\r\n              const position = [\r\n                new Vector2(basketState.x, basketState.y - basketState.height),\r\n                new Vector2(basketState.x, basketState.y - basketState.height),\r\n                new Vector2(basketState.x, basketState.y - basketState.height),\r\n              ];\r\n              const target = [\r\n                new Vector2(\r\n                  basketState.x -\r\n                    Math.random() * (width / 3 - width / 7) +\r\n                    width / 7,\r\n                  Math.random() * ((height * 6.5) / 8 - (height * 5) / 8) +\r\n                    (height * 5) / 8\r\n                ),\r\n                new Vector2(\r\n                  basketState.x - Math.random() * (width / 20),\r\n                  Math.random() * ((height * 6.5) / 8 - (height * 5) / 8) +\r\n                    (height * 5) / 8\r\n                ),\r\n                new Vector2(\r\n                  basketState.x +\r\n                    Math.random() * (width / 3 - width / 7) +\r\n                    width / 7,\r\n                  Math.random() * ((height * 6.5) / 8 - (height * 5) / 8) +\r\n                    (height * 5) / 8\r\n                ),\r\n              ];\r\n\r\n              let speed = [];\r\n              let scaleSpeed = [];\r\n              for (let i = 0; i < time.length; i++) {\r\n                speed.push(target[i].distance(position[i]) / time[i]);\r\n                scaleSpeed.push(1 / time[i]);\r\n              }\r\n\r\n              starList.push({\r\n                type: 1,\r\n                time,\r\n                scale,\r\n                stateTime,\r\n                position,\r\n                target,\r\n                speed,\r\n                scaleSpeed,\r\n              });\r\n            }\r\n\r\n            products.splice(i, 1);\r\n            break; // if there is any one match => break the loop\r\n          }\r\n\r\n          //wrong catch\r\n          if (products[i].isFake) {\r\n            console.log(\"miss\");\r\n            life[worldState.lifeIndex].open = false;\r\n            worldState.lifeIndex = Math.max(0, (worldState.lifeIndex -= 1));\r\n            worldState.stunScreen.check = true;\r\n            products.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBasketCollideSystem;\r\n"]},"metadata":{},"sourceType":"module"}