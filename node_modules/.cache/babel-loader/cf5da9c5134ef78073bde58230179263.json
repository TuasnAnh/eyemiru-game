{"ast":null,"code":"const createLifeRenderSystem = () => {\n  let openEye, closeEye;\n  let L_WIDTH, L_HEIGHT;\n  return {\n    init(worldState, {\n      width,\n      height,\n      assets\n    }) {\n      const atlas = assets.gameAssets;\n      openEye = atlas.findRegion(\"open_eye\", -1);\n      closeEye = atlas.findRegion(\"close_Eye\", -1);\n      L_WIDTH = width / 10;\n      L_HEIGHT = L_WIDTH * openEye.height / openEye.width;\n    },\n\n    update(delta, {\n      life\n    }, {\n      batch,\n      camera,\n      width,\n      height\n    }) {\n      console.log(life);\n      batch.setProjection(camera.combined);\n      batch.begin();\n\n      for (let i = 0; i < life.lenght; i++) {\n        let lifeTex = closeEye;\n\n        if (life[i].open) {\n          lifeTex = openEye;\n        }\n\n        console.log(lifeTex);\n        lifeTex.draw(batch, width / 2 + i * (L_WIDTH + width / 20), height / 20, L_WIDTH, L_HEIGHT);\n      }\n\n      batch.end();\n    }\n\n  };\n};\n\nexport default createLifeRenderSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/LifeRenderSystem.js"],"names":["createLifeRenderSystem","openEye","closeEye","L_WIDTH","L_HEIGHT","init","worldState","width","height","assets","atlas","gameAssets","findRegion","update","delta","life","batch","camera","console","log","setProjection","combined","begin","i","lenght","lifeTex","open","draw","end"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,MAAM;AACnC,MAAIC,OAAJ,EAAaC,QAAb;AACA,MAAIC,OAAJ,EAAaC,QAAb;AACA,SAAO;AACLC,IAAAA,IAAI,CAACC,UAAD,EAAa;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,KAAb,EAAwC;AAC1C,YAAMC,KAAK,GAAGD,MAAM,CAACE,UAArB;AAEAV,MAAAA,OAAO,GAAGS,KAAK,CAACE,UAAN,CAAiB,UAAjB,EAA6B,CAAC,CAA9B,CAAV;AACAV,MAAAA,QAAQ,GAAGQ,KAAK,CAACE,UAAN,CAAiB,WAAjB,EAA8B,CAAC,CAA/B,CAAX;AAEAT,MAAAA,OAAO,GAAGI,KAAK,GAAG,EAAlB;AACAH,MAAAA,QAAQ,GAAID,OAAO,GAAGF,OAAO,CAACO,MAAnB,GAA6BP,OAAO,CAACM,KAAhD;AACD,KATI;;AAULM,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAkB;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBV,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,KAAlB,EAAoD;AACxDU,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAC,MAAAA,KAAK,CAACI,aAAN,CAAoBH,MAAM,CAACI,QAA3B;AACAL,MAAAA,KAAK,CAACM,KAAN;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAIE,OAAO,GAAGvB,QAAd;;AACA,YAAIa,IAAI,CAACQ,CAAD,CAAJ,CAAQG,IAAZ,EAAkB;AAChBD,UAAAA,OAAO,GAAGxB,OAAV;AACD;;AACDiB,QAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACAA,QAAAA,OAAO,CAACE,IAAR,CACEX,KADF,EAEET,KAAK,GAAG,CAAR,GAAYgB,CAAC,IAAIpB,OAAO,GAAGI,KAAK,GAAG,EAAtB,CAFf,EAGEC,MAAM,GAAG,EAHX,EAIEL,OAJF,EAKEC,QALF;AAOD;;AACDY,MAAAA,KAAK,CAACY,GAAN;AACD;;AA7BI,GAAP;AA+BD,CAlCD;;AAoCA,eAAe5B,sBAAf","sourcesContent":["const createLifeRenderSystem = () => {\r\n  let openEye, closeEye;\r\n  let L_WIDTH, L_HEIGHT;\r\n  return {\r\n    init(worldState, { width, height, assets }) {\r\n      const atlas = assets.gameAssets;\r\n\r\n      openEye = atlas.findRegion(\"open_eye\", -1);\r\n      closeEye = atlas.findRegion(\"close_Eye\", -1);\r\n\r\n      L_WIDTH = width / 10;\r\n      L_HEIGHT = (L_WIDTH * openEye.height) / openEye.width;\r\n    },\r\n    update(delta, { life }, { batch, camera, width, height }) {\r\n      console.log(life);\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      for (let i = 0; i < life.lenght; i++) {\r\n        let lifeTex = closeEye;\r\n        if (life[i].open) {\r\n          lifeTex = openEye;\r\n        }\r\n        console.log(lifeTex);\r\n        lifeTex.draw(\r\n          batch,\r\n          width / 2 + i * (L_WIDTH + width / 20),\r\n          height / 20,\r\n          L_WIDTH,\r\n          L_HEIGHT\r\n        );\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createLifeRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}