{"ast":null,"code":"var createBackGroundRenderSystem=function createBackGroundRenderSystem(){var bg,border;var BG_WIDTH,BG_HEIGHT,B_WIDTH,B_HEIGHT;return{init:function init(worldState,_ref){var width=_ref.width,height=_ref.height,assets=_ref.assets;var atlas=assets.gameAssets;bg=atlas.findRegion(\"BG\",-1);border=atlas.findRegion(\"border\",-1);BG_HEIGHT=height;BG_WIDTH=BG_HEIGHT*bg.width/bg.height;B_HEIGHT=height;B_WIDTH=B_HEIGHT*border.width/border.height;},update:function update(delta,worldState,_ref2){var batch=_ref2.batch,width=_ref2.width,height=_ref2.height,camera=_ref2.camera;batch.setProjection(camera.combined);batch.begin();batch.setColor(1,1,1,1);bg.draw(batch,width/2-BG_WIDTH/2,0,BG_WIDTH,BG_HEIGHT);border.draw(batch,0,0,B_WIDTH,B_HEIGHT);border.draw(batch,width-B_WIDTH,0,B_WIDTH,B_HEIGHT);batch.end();}};};export default createBackGroundRenderSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/BgRenderSystem.js"],"names":["createBackGroundRenderSystem","bg","border","BG_WIDTH","BG_HEIGHT","B_WIDTH","B_HEIGHT","init","worldState","width","height","assets","atlas","gameAssets","findRegion","update","delta","batch","camera","setProjection","combined","begin","setColor","draw","end"],"mappings":"AAAA,GAAMA,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,EAAM,CACzC,GAAIC,CAAAA,EAAJ,CAAQC,MAAR,CACA,GAAIC,CAAAA,QAAJ,CAAcC,SAAd,CAAyBC,OAAzB,CAAkCC,QAAlC,CAEA,MAAO,CACLC,IADK,eACAC,UADA,MACuC,IAAzBC,CAAAA,KAAyB,MAAzBA,KAAyB,CAAlBC,MAAkB,MAAlBA,MAAkB,CAAVC,MAAU,MAAVA,MAAU,CAC1C,GAAIC,CAAAA,KAAK,CAAGD,MAAM,CAACE,UAAnB,CAEAZ,EAAE,CAAGW,KAAK,CAACE,UAAN,CAAiB,IAAjB,CAAuB,CAAC,CAAxB,CAAL,CACAZ,MAAM,CAAGU,KAAK,CAACE,UAAN,CAAiB,QAAjB,CAA2B,CAAC,CAA5B,CAAT,CAEAV,SAAS,CAAGM,MAAZ,CACAP,QAAQ,CAAIC,SAAS,CAAGH,EAAE,CAACQ,KAAhB,CAAyBR,EAAE,CAACS,MAAvC,CAEAJ,QAAQ,CAAGI,MAAX,CACAL,OAAO,CAAIC,QAAQ,CAAGJ,MAAM,CAACO,KAAnB,CAA4BP,MAAM,CAACQ,MAA7C,CACD,CAZI,CAaLK,MAbK,iBAaEC,KAbF,CAaSR,UAbT,OAauD,IAAhCS,CAAAA,KAAgC,OAAhCA,KAAgC,CAAzBR,KAAyB,OAAzBA,KAAyB,CAAlBC,MAAkB,OAAlBA,MAAkB,CAAVQ,MAAU,OAAVA,MAAU,CAC1DD,KAAK,CAACE,aAAN,CAAoBD,MAAM,CAACE,QAA3B,EACAH,KAAK,CAACI,KAAN,GACAJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,EACArB,EAAE,CAACsB,IAAH,CAAQN,KAAR,CAAeR,KAAK,CAAG,CAAR,CAAYN,QAAQ,CAAG,CAAtC,CAAyC,CAAzC,CAA4CA,QAA5C,CAAsDC,SAAtD,EAEAF,MAAM,CAACqB,IAAP,CAAYN,KAAZ,CAAmB,CAAnB,CAAsB,CAAtB,CAAyBZ,OAAzB,CAAkCC,QAAlC,EACAJ,MAAM,CAACqB,IAAP,CAAYN,KAAZ,CAAmBR,KAAK,CAAGJ,OAA3B,CAAoC,CAApC,CAAuCA,OAAvC,CAAgDC,QAAhD,EAEAW,KAAK,CAACO,GAAN,GACD,CAvBI,CAAP,CAyBD,CA7BD,CA+BA,cAAexB,CAAAA,4BAAf","sourcesContent":["const createBackGroundRenderSystem = () => {\r\n  let bg, border;\r\n  let BG_WIDTH, BG_HEIGHT, B_WIDTH, B_HEIGHT;\r\n\r\n  return {\r\n    init(worldState, { width, height, assets }) {\r\n      let atlas = assets.gameAssets;\r\n\r\n      bg = atlas.findRegion(\"BG\", -1);\r\n      border = atlas.findRegion(\"border\", -1);\r\n\r\n      BG_HEIGHT = height;\r\n      BG_WIDTH = (BG_HEIGHT * bg.width) / bg.height;\r\n\r\n      B_HEIGHT = height;\r\n      B_WIDTH = (B_HEIGHT * border.width) / border.height;\r\n    },\r\n    update(delta, worldState, { batch, width, height, camera }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      bg.draw(batch, width / 2 - BG_WIDTH / 2, 0, BG_WIDTH, BG_HEIGHT);\r\n\r\n      border.draw(batch, 0, 0, B_WIDTH, B_HEIGHT);\r\n      border.draw(batch, width - B_WIDTH, 0, B_WIDTH, B_HEIGHT);\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBackGroundRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}