{"ast":null,"code":"import { Vector2 } from \"gdxjs\";\n\nconst createBasketCollideSystem = () => {\n  return {\n    update(delta, worldState, {\n      width,\n      height\n    }) {\n      const {\n        basketState,\n        products,\n        collection,\n        life,\n        starList\n      } = worldState;\n      let got = false;\n\n      for (let i = products.length - 1; i >= 0; i--) {\n        if (products[i].x > basketState.x - basketState.width / 2 && products[i].x < basketState.x + basketState.width / 2 && products[i].y > basketState.y - basketState.height * 0.7 && products[i].y < basketState.y - basketState.height * 0.6) {\n          if (!products[i].isFake && !worldState.correctCatch) {\n            console.log(\"hit\");\n            worldState.correctCatch = true;\n\n            for (let j = 0; j < collection.length; j++) {\n              if (collection[j].type === products[i].type && !collection[j].enable && !got) {\n                got = true;\n                collection[j].enable = true;\n              }\n            } // 0: 1 star --- 1: 3 stars\n\n\n            if (products[i].type === 2) {\n              const time = 0.3;\n              const speedX = basketState.width / time;\n              const scaleSpeed = (1 - 0) / (2 / 3 * time);\n              starList.push({\n                type: 0,\n                stateTime: 0,\n                time,\n                scale: 0,\n                scaleSpeed,\n                speedX,\n                accuX: 0 // value\n\n              });\n            } else {\n              const stateTime = [0, 0, 0];\n              const time = [Math.random() * (1 - 0.5) + 0.5, Math.random() * (1 - 0.5) + 0.5, Math.random() * (1 - 0.5) + 0.5];\n              const position = [new Vector2(basketState.x, basketState.y), new Vector2(basketState.x, basketState.y), new Vector2(basketState.x, basketState.y)];\n              const target = [new Vector2(Math.random() * width, Math.random() * height / 2), new Vector2(Math.random() * width, Math.random() * height / 2), new Vector2(Math.random() * width, Math.random() * height / 2)];\n              let speed = [];\n\n              for (let i = 0; i < time.length; i++) {\n                speed.push(target[i].distance(position[i]) / time[i]);\n              }\n\n              console.log(speed);\n              starList.push({\n                type: 1,\n                // value\n                time,\n                stateTime,\n                position,\n                target,\n                speed\n              });\n            }\n\n            products.splice(i, 1);\n            break; // if there is any one match => break the loop\n          } //wrong catch\n\n\n          if (products[i].isFake) {\n            console.log(\"miss\");\n            life[worldState.lifeIndex].open = false;\n            worldState.lifeIndex = Math.max(0, worldState.lifeIndex -= 1);\n            worldState.stunScreen.check = true;\n            products.splice(i, 1);\n          }\n        }\n      }\n    }\n\n  };\n};\n\nexport default createBasketCollideSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/BasketCollideSystem.js"],"names":["Vector2","createBasketCollideSystem","update","delta","worldState","width","height","basketState","products","collection","life","starList","got","i","length","x","y","isFake","correctCatch","console","log","j","type","enable","time","speedX","scaleSpeed","push","stateTime","scale","accuX","Math","random","position","target","speed","distance","splice","lifeIndex","open","max","stunScreen","check"],"mappings":"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","sourcesContent":["import { Vector2 } from \"gdxjs\";\r\n\r\nconst createBasketCollideSystem = () => {\r\n  return {\r\n    update(delta, worldState, { width, height }) {\r\n      const { basketState, products, collection, life, starList } = worldState;\r\n\r\n      let got = false;\r\n      for (let i = products.length - 1; i >= 0; i--) {\r\n        if (\r\n          products[i].x > basketState.x - basketState.width / 2 &&\r\n          products[i].x < basketState.x + basketState.width / 2 &&\r\n          products[i].y > basketState.y - basketState.height * 0.7 &&\r\n          products[i].y < basketState.y - basketState.height * 0.6\r\n        ) {\r\n          if (!products[i].isFake && !worldState.correctCatch) {\r\n            console.log(\"hit\");\r\n            worldState.correctCatch = true;\r\n            for (let j = 0; j < collection.length; j++) {\r\n              if (\r\n                collection[j].type === products[i].type &&\r\n                !collection[j].enable &&\r\n                !got\r\n              ) {\r\n                got = true;\r\n                collection[j].enable = true;\r\n              }\r\n            }\r\n\r\n            // 0: 1 star --- 1: 3 stars\r\n            if (products[i].type === 2) {\r\n              const time = 0.3;\r\n              const speedX = basketState.width / time;\r\n              const scaleSpeed = (1 - 0) / ((2 / 3) * time);\r\n              starList.push({\r\n                type: 0,\r\n                stateTime: 0,\r\n                time,\r\n                scale: 0,\r\n                scaleSpeed,\r\n                speedX,\r\n                accuX: 0,\r\n                // value\r\n              });\r\n            } else {\r\n              const stateTime = [0, 0, 0];\r\n              const time = [\r\n                Math.random() * (1 - 0.5) + 0.5,\r\n                Math.random() * (1 - 0.5) + 0.5,\r\n                Math.random() * (1 - 0.5) + 0.5,\r\n              ];\r\n              const position = [\r\n                new Vector2(basketState.x, basketState.y),\r\n                new Vector2(basketState.x, basketState.y),\r\n                new Vector2(basketState.x, basketState.y),\r\n              ];\r\n              const target = [\r\n                new Vector2(\r\n                  Math.random() * width,\r\n                  (Math.random() * height) / 2\r\n                ),\r\n                new Vector2(\r\n                  Math.random() * width,\r\n                  (Math.random() * height) / 2\r\n                ),\r\n                new Vector2(\r\n                  Math.random() * width,\r\n                  (Math.random() * height) / 2\r\n                ),\r\n              ];\r\n\r\n              let speed = [];\r\n              for (let i = 0; i < time.length; i++) {\r\n                speed.push(target[i].distance(position[i]) / time[i]);\r\n              }\r\n\r\n              console.log(speed);\r\n              starList.push({\r\n                type: 1,\r\n                // value\r\n                time,\r\n                stateTime,\r\n                position,\r\n                target,\r\n                speed,\r\n              });\r\n            }\r\n\r\n            products.splice(i, 1);\r\n            break; // if there is any one match => break the loop\r\n          }\r\n\r\n          //wrong catch\r\n          if (products[i].isFake) {\r\n            console.log(\"miss\");\r\n            life[worldState.lifeIndex].open = false;\r\n            worldState.lifeIndex = Math.max(0, (worldState.lifeIndex -= 1));\r\n            worldState.stunScreen.check = true;\r\n            products.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBasketCollideSystem;\r\n"]},"metadata":{},"sourceType":"module"}