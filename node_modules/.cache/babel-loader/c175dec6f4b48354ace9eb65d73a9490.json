{"ast":null,"code":"import { Vector2 } from \"gdxjs\";\n\nconst createBasketPositionSystem = () => {\n  let tmp = new Vector2();\n  return {\n    update(delta, {\n      basketState\n    }, {\n      batch,\n      width,\n      height,\n      camera\n    }) {\n      tmp.setVector(basketState.target).subVector(basketState.position).nor().scale(basketState.speed * delta);\n\n      if (basketState.target.distanceSqr(basketState.position) <= tmp.len2()) {\n        basketState.position.setVector(basketState.target);\n      } else {\n        basketState.position.addVector(tmp);\n      }\n\n      basketState.x = basketState.position.x;\n\n      if (basketState.x <= basketState.width / 2) {\n        basketState.x = basketState.width / 2;\n      }\n\n      if (basketState.x >= width - basketState.width / 2) {\n        basketState.x = width - basketState.width / 2;\n      }\n    }\n\n  };\n};\n\nexport default createBasketPositionSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/BasketPositionSystem.js"],"names":["Vector2","createBasketPositionSystem","tmp","update","delta","basketState","batch","width","height","camera","setVector","target","subVector","position","nor","scale","speed","distanceSqr","len2","addVector","x"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,0BAA0B,GAAG,MAAM;AACvC,MAAIC,GAAG,GAAG,IAAIF,OAAJ,EAAV;AAEA,SAAO;AACLG,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAyB;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,MAAhB;AAAwBC,MAAAA;AAAxB,KAAzB,EAA2D;AAC/DP,MAAAA,GAAG,CACAQ,SADH,CACaL,WAAW,CAACM,MADzB,EAEGC,SAFH,CAEaP,WAAW,CAACQ,QAFzB,EAGGC,GAHH,GAIGC,KAJH,CAISV,WAAW,CAACW,KAAZ,GAAoBZ,KAJ7B;;AAKA,UAAIC,WAAW,CAACM,MAAZ,CAAmBM,WAAnB,CAA+BZ,WAAW,CAACQ,QAA3C,KAAwDX,GAAG,CAACgB,IAAJ,EAA5D,EAAwE;AACtEb,QAAAA,WAAW,CAACQ,QAAZ,CAAqBH,SAArB,CAA+BL,WAAW,CAACM,MAA3C;AACD,OAFD,MAEO;AACLN,QAAAA,WAAW,CAACQ,QAAZ,CAAqBM,SAArB,CAA+BjB,GAA/B;AACD;;AAEDG,MAAAA,WAAW,CAACe,CAAZ,GAAgBf,WAAW,CAACQ,QAAZ,CAAqBO,CAArC;;AACA,UAAIf,WAAW,CAACe,CAAZ,IAAiBf,WAAW,CAACE,KAAZ,GAAoB,CAAzC,EAA4C;AAC1CF,QAAAA,WAAW,CAACe,CAAZ,GAAgBf,WAAW,CAACE,KAAZ,GAAoB,CAApC;AACD;;AACD,UAAIF,WAAW,CAACe,CAAZ,IAAiBb,KAAK,GAAGF,WAAW,CAACE,KAAZ,GAAoB,CAAjD,EAAoD;AAClDF,QAAAA,WAAW,CAACe,CAAZ,GAAgBb,KAAK,GAAGF,WAAW,CAACE,KAAZ,GAAoB,CAA5C;AACD;AACF;;AApBI,GAAP;AAsBD,CAzBD;;AA2BA,eAAeN,0BAAf","sourcesContent":["import { Vector2 } from \"gdxjs\";\r\n\r\nconst createBasketPositionSystem = () => {\r\n  let tmp = new Vector2();\r\n\r\n  return {\r\n    update(delta, { basketState }, { batch, width, height, camera }) {\r\n      tmp\r\n        .setVector(basketState.target)\r\n        .subVector(basketState.position)\r\n        .nor()\r\n        .scale(basketState.speed * delta);\r\n      if (basketState.target.distanceSqr(basketState.position) <= tmp.len2()) {\r\n        basketState.position.setVector(basketState.target);\r\n      } else {\r\n        basketState.position.addVector(tmp);\r\n      }\r\n\r\n      basketState.x = basketState.position.x;\r\n      if (basketState.x <= basketState.width / 2) {\r\n        basketState.x = basketState.width / 2;\r\n      }\r\n      if (basketState.x >= width - basketState.width / 2) {\r\n        basketState.x = width - basketState.width / 2;\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBasketPositionSystem;\r\n"]},"metadata":{},"sourceType":"module"}