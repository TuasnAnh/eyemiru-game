{"ast":null,"code":"const createStarEffectRenderSystem = () => {\n  let startTex;\n  let S1_WIDTH, S1_HEIGHT;\n  return {\n    init(worldState, {\n      assets,\n      width,\n      height\n    }) {\n      const atlas = assets.gameAssets;\n      startTex = atlas.findRegion(\"star\", -1);\n      S1_WIDTH = width / 100;\n      S1_HEIGHT = S1_WIDTH * startTex.height / startTex.width;\n    },\n\n    update(delta, {\n      starList,\n      basketState\n    }, {\n      batch,\n      camera,\n      width,\n      height\n    }) {\n      batch.setProjection(camera.combined);\n      batch.begin();\n\n      for (let i = starList.length - 1; i >= 0; i--) {\n        if (starList[i].type === 0) {\n          starList[i].accuX += delta * starList[i].speedX;\n\n          if (starList[i].accuX < basketState.width * 2 / 3) {\n            starList[i].scale += delta * starList[i].scaleSpeed;\n          } else {\n            starList[i].scale -= delta * starList[i].scaleSpeed * 2;\n          }\n\n          startTex.draw(batch, basketState.x + starList[i].accuX - S1_WIDTH / 2, basketState.y - S1_HEIGHT / 2, S1_WIDTH, S1_HEIGHT, S1_WIDTH / 2, S1_HEIGHT / 2, 0, starList[i].scale, starList[i].scale);\n\n          if (starList[i].scale < 0) {\n            starList.splice(i, 1);\n          }\n        }\n      }\n\n      batch.end();\n    }\n\n  };\n};\n\nexport default createStarEffectRenderSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/StarEffectRenderSystem.js"],"names":["createStarEffectRenderSystem","startTex","S1_WIDTH","S1_HEIGHT","init","worldState","assets","width","height","atlas","gameAssets","findRegion","update","delta","starList","basketState","batch","camera","setProjection","combined","begin","i","length","type","accuX","speedX","scale","scaleSpeed","draw","x","y","splice","end"],"mappings":"AAAA,MAAMA,4BAA4B,GAAG,MAAM;AACzC,MAAIC,QAAJ;AACA,MAAIC,QAAJ,EAAcC,SAAd;AAEA,SAAO;AACLC,IAAAA,IAAI,CAACC,UAAD,EAAa;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,KAAb,EAAwC;AAC1C,YAAMC,KAAK,GAAGH,MAAM,CAACI,UAArB;AACAT,MAAAA,QAAQ,GAAGQ,KAAK,CAACE,UAAN,CAAiB,MAAjB,EAAyB,CAAC,CAA1B,CAAX;AAEAT,MAAAA,QAAQ,GAAGK,KAAK,GAAG,GAAnB;AACAJ,MAAAA,SAAS,GAAID,QAAQ,GAAGD,QAAQ,CAACO,MAArB,GAA+BP,QAAQ,CAACM,KAApD;AACD,KAPI;;AAQLK,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAR,EAAmC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBV,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,KAAnC,EAAqE;AACzEQ,MAAAA,KAAK,CAACE,aAAN,CAAoBD,MAAM,CAACE,QAA3B;AACAH,MAAAA,KAAK,CAACI,KAAN;;AAEA,WAAK,IAAIC,CAAC,GAAGP,QAAQ,CAACQ,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7C,YAAIP,QAAQ,CAACO,CAAD,CAAR,CAAYE,IAAZ,KAAqB,CAAzB,EAA4B;AAC1BT,UAAAA,QAAQ,CAACO,CAAD,CAAR,CAAYG,KAAZ,IAAqBX,KAAK,GAAGC,QAAQ,CAACO,CAAD,CAAR,CAAYI,MAAzC;;AACA,cAAIX,QAAQ,CAACO,CAAD,CAAR,CAAYG,KAAZ,GAAqBT,WAAW,CAACR,KAAZ,GAAoB,CAArB,GAA0B,CAAlD,EAAqD;AACnDO,YAAAA,QAAQ,CAACO,CAAD,CAAR,CAAYK,KAAZ,IAAqBb,KAAK,GAAGC,QAAQ,CAACO,CAAD,CAAR,CAAYM,UAAzC;AACD,WAFD,MAEO;AACLb,YAAAA,QAAQ,CAACO,CAAD,CAAR,CAAYK,KAAZ,IAAqBb,KAAK,GAAGC,QAAQ,CAACO,CAAD,CAAR,CAAYM,UAApB,GAAiC,CAAtD;AACD;;AACD1B,UAAAA,QAAQ,CAAC2B,IAAT,CACEZ,KADF,EAEED,WAAW,CAACc,CAAZ,GAAgBf,QAAQ,CAACO,CAAD,CAAR,CAAYG,KAA5B,GAAoCtB,QAAQ,GAAG,CAFjD,EAGEa,WAAW,CAACe,CAAZ,GAAgB3B,SAAS,GAAG,CAH9B,EAIED,QAJF,EAKEC,SALF,EAMED,QAAQ,GAAG,CANb,EAOEC,SAAS,GAAG,CAPd,EAQE,CARF,EASEW,QAAQ,CAACO,CAAD,CAAR,CAAYK,KATd,EAUEZ,QAAQ,CAACO,CAAD,CAAR,CAAYK,KAVd;;AAaA,cAAIZ,QAAQ,CAACO,CAAD,CAAR,CAAYK,KAAZ,GAAoB,CAAxB,EAA2B;AACzBZ,YAAAA,QAAQ,CAACiB,MAAT,CAAgBV,CAAhB,EAAmB,CAAnB;AACD;AACF;AACF;;AAEDL,MAAAA,KAAK,CAACgB,GAAN;AACD;;AAxCI,GAAP;AA0CD,CA9CD;;AAgDA,eAAehC,4BAAf","sourcesContent":["const createStarEffectRenderSystem = () => {\r\n  let startTex;\r\n  let S1_WIDTH, S1_HEIGHT;\r\n\r\n  return {\r\n    init(worldState, { assets, width, height }) {\r\n      const atlas = assets.gameAssets;\r\n      startTex = atlas.findRegion(\"star\", -1);\r\n\r\n      S1_WIDTH = width / 100;\r\n      S1_HEIGHT = (S1_WIDTH * startTex.height) / startTex.width;\r\n    },\r\n    update(delta, { starList, basketState }, { batch, camera, width, height }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n\r\n      for (let i = starList.length - 1; i >= 0; i--) {\r\n        if (starList[i].type === 0) {\r\n          starList[i].accuX += delta * starList[i].speedX;\r\n          if (starList[i].accuX < (basketState.width * 2) / 3) {\r\n            starList[i].scale += delta * starList[i].scaleSpeed;\r\n          } else {\r\n            starList[i].scale -= delta * starList[i].scaleSpeed * 2;\r\n          }\r\n          startTex.draw(\r\n            batch,\r\n            basketState.x + starList[i].accuX - S1_WIDTH / 2,\r\n            basketState.y - S1_HEIGHT / 2,\r\n            S1_WIDTH,\r\n            S1_HEIGHT,\r\n            S1_WIDTH / 2,\r\n            S1_HEIGHT / 2,\r\n            0,\r\n            starList[i].scale,\r\n            starList[i].scale\r\n          );\r\n\r\n          if (starList[i].scale < 0) {\r\n            starList.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createStarEffectRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}