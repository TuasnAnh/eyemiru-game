{"ast":null,"code":"const createProductRenderSystem = () => {\n  let P_HEIGHT;\n  let productInfos = [];\n  let fakeProductInfos = [];\n  let product;\n  return {\n    init(worldState, {\n      width,\n      height,\n      productTex,\n      fakeProductTex\n    }) {\n      let P_HEIGHT = height / 9;\n\n      for (let i = 0; i < productTex.length; i++) {\n        productInfos.push({\n          tex: productTex[i].image,\n          width: productTex[i].image.width * P_HEIGHT / productTex[i].height\n        });\n      }\n\n      for (let i = 0; i < fakeProductInfos.length; i++) {\n        productInfos.push({\n          tex: fakeProductInfos[i].image,\n          width: fakeProductInfos[i].image.width * P_HEIGHT / fakeProductInfos[i].height\n        });\n      }\n    },\n\n    update(delta, {\n      products\n    }, {\n      batch,\n      camera,\n      width,\n      height,\n      productTex,\n      fakeProductTex\n    }) {\n      batch.setProjection(camera.combined);\n      batch.begin();\n      batch.setColor(1, 1, 1, 1);\n\n      for (let i = products.length - 1; i >= 0; i--) {\n        product = !products[i].isFake ? productInfos[products[i].type] : fakeProductInfos[products[i].type];\n        product.tex.draw(batch, products[i].x - product.width / 2, products[i].y, product.width, P_HEIGHT);\n      }\n\n      batch.end();\n    }\n\n  };\n};\n\nexport default createProductRenderSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/screens/ProductRenderSystem.js"],"names":["createProductRenderSystem","P_HEIGHT","productInfos","fakeProductInfos","product","init","worldState","width","height","productTex","fakeProductTex","i","length","push","tex","image","update","delta","products","batch","camera","setProjection","combined","begin","setColor","isFake","type","draw","x","y","end"],"mappings":"AAAA,MAAMA,yBAAyB,GAAG,MAAM;AACtC,MAAIC,QAAJ;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,OAAJ;AACA,SAAO;AACLC,IAAAA,IAAI,CAACC,UAAD,EAAa;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,UAAjB;AAA6BC,MAAAA;AAA7B,KAAb,EAA4D;AAC9D,UAAIT,QAAQ,GAAGO,MAAM,GAAG,CAAxB;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CT,QAAAA,YAAY,CAACW,IAAb,CAAkB;AAChBC,UAAAA,GAAG,EAAEL,UAAU,CAACE,CAAD,CAAV,CAAcI,KADH;AAEhBR,UAAAA,KAAK,EAAGE,UAAU,CAACE,CAAD,CAAV,CAAcI,KAAd,CAAoBR,KAApB,GAA4BN,QAA7B,GAAyCQ,UAAU,CAACE,CAAD,CAAV,CAAcH;AAF9C,SAAlB;AAID;;AAED,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,gBAAgB,CAACS,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAChDT,QAAAA,YAAY,CAACW,IAAb,CAAkB;AAChBC,UAAAA,GAAG,EAAEX,gBAAgB,CAACQ,CAAD,CAAhB,CAAoBI,KADT;AAEhBR,UAAAA,KAAK,EACFJ,gBAAgB,CAACQ,CAAD,CAAhB,CAAoBI,KAApB,CAA0BR,KAA1B,GAAkCN,QAAnC,GACAE,gBAAgB,CAACQ,CAAD,CAAhB,CAAoBH;AAJN,SAAlB;AAMD;AACF,KAlBI;;AAmBLQ,IAAAA,MAAM,CACJC,KADI,EAEJ;AAAEC,MAAAA;AAAF,KAFI,EAGJ;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBb,MAAAA,KAAjB;AAAwBC,MAAAA,MAAxB;AAAgCC,MAAAA,UAAhC;AAA4CC,MAAAA;AAA5C,KAHI,EAIJ;AACAS,MAAAA,KAAK,CAACE,aAAN,CAAoBD,MAAM,CAACE,QAA3B;AACAH,MAAAA,KAAK,CAACI,KAAN;AACAJ,MAAAA,KAAK,CAACK,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;;AACA,WAAK,IAAIb,CAAC,GAAGO,QAAQ,CAACN,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7CP,QAAAA,OAAO,GAAG,CAACc,QAAQ,CAACP,CAAD,CAAR,CAAYc,MAAb,GACNvB,YAAY,CAACgB,QAAQ,CAACP,CAAD,CAAR,CAAYe,IAAb,CADN,GAENvB,gBAAgB,CAACe,QAAQ,CAACP,CAAD,CAAR,CAAYe,IAAb,CAFpB;AAIAtB,QAAAA,OAAO,CAACU,GAAR,CAAYa,IAAZ,CACER,KADF,EAEED,QAAQ,CAACP,CAAD,CAAR,CAAYiB,CAAZ,GAAgBxB,OAAO,CAACG,KAAR,GAAgB,CAFlC,EAGEW,QAAQ,CAACP,CAAD,CAAR,CAAYkB,CAHd,EAIEzB,OAAO,CAACG,KAJV,EAKEN,QALF;AAOD;;AACDkB,MAAAA,KAAK,CAACW,GAAN;AACD;;AAzCI,GAAP;AA2CD,CAhDD;;AAkDA,eAAe9B,yBAAf","sourcesContent":["const createProductRenderSystem = () => {\r\n  let P_HEIGHT;\r\n  let productInfos = [];\r\n  let fakeProductInfos = [];\r\n  let product;\r\n  return {\r\n    init(worldState, { width, height, productTex, fakeProductTex }) {\r\n      let P_HEIGHT = height / 9;\r\n      for (let i = 0; i < productTex.length; i++) {\r\n        productInfos.push({\r\n          tex: productTex[i].image,\r\n          width: (productTex[i].image.width * P_HEIGHT) / productTex[i].height,\r\n        });\r\n      }\r\n\r\n      for (let i = 0; i < fakeProductInfos.length; i++) {\r\n        productInfos.push({\r\n          tex: fakeProductInfos[i].image,\r\n          width:\r\n            (fakeProductInfos[i].image.width * P_HEIGHT) /\r\n            fakeProductInfos[i].height,\r\n        });\r\n      }\r\n    },\r\n    update(\r\n      delta,\r\n      { products },\r\n      { batch, camera, width, height, productTex, fakeProductTex }\r\n    ) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      for (let i = products.length - 1; i >= 0; i--) {\r\n        product = !products[i].isFake\r\n          ? productInfos[products[i].type]\r\n          : fakeProductInfos[products[i].type];\r\n\r\n        product.tex.draw(\r\n          batch,\r\n          products[i].x - product.width / 2,\r\n          products[i].y,\r\n          product.width,\r\n          P_HEIGHT\r\n        );\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createProductRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}