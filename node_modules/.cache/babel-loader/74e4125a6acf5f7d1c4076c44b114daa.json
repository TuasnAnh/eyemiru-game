{"ast":null,"code":"import { createAnimation } from \"gdxjs\";\n\nconst createWhiteSmokeRenderSystem = () => {\n  let smokeAnimation;\n  const duration = 0.05;\n  let frameLength = 0;\n  let SMOKE_WIDTH, SMOKE_HEIGHT;\n  return {\n    init(worldState, {\n      assets,\n      width,\n      height\n    }) {\n      const smokeAtlas = assets.smoke;\n      const effect = smokeAtlas.findRegions(\"effect boc khoi\");\n      smokeAnimation = createAnimation(duration, effect);\n      frameLength = effect.length - 1;\n      SMOKE_WIDTH = width * 0.7;\n      SMOKE_HEIGHT = effect[0].height * SMOKE_WIDTH / effect[0].width;\n    },\n\n    update(delta, {\n      whiteSmokeList\n    }, {\n      batch,\n      camera,\n      width,\n      height\n    }) {\n      batch.setProjection(camera.combined);\n      batch.begin();\n      batch.setColor(1, 1, 1, 1);\n\n      for (let i = whiteSmokeList.length - 1; i >= 0; i--) {\n        whiteSmokeList[i].stateTime += delta;\n        smokeAnimation.getKeyFrame(whiteSmokeList[i].stateTime, 1).draw(batch, whiteSmokeList[i].x - SMOKE_WIDTH / 2.5, whiteSmokeList[i].y - SMOKE_HEIGHT / 3, SMOKE_WIDTH, SMOKE_HEIGHT);\n\n        if (whiteSmokeList[i].stateTime > duration * frameLength) {\n          whiteSmokeList.splice(i, 1);\n        }\n      }\n\n      batch.end();\n    }\n\n  };\n};\n\nexport default createWhiteSmokeRenderSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/WhiteSmokeRenderSystem.js"],"names":["createAnimation","createWhiteSmokeRenderSystem","smokeAnimation","duration","frameLength","SMOKE_WIDTH","SMOKE_HEIGHT","init","worldState","assets","width","height","smokeAtlas","smoke","effect","findRegions","length","update","delta","whiteSmokeList","batch","camera","setProjection","combined","begin","setColor","i","stateTime","getKeyFrame","draw","x","y","splice","end"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,MAAMC,4BAA4B,GAAG,MAAM;AACzC,MAAIC,cAAJ;AACA,QAAMC,QAAQ,GAAG,IAAjB;AACA,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,WAAJ,EAAiBC,YAAjB;AACA,SAAO;AACLC,IAAAA,IAAI,CAACC,UAAD,EAAa;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,KAAb,EAAwC;AAC1C,YAAMC,UAAU,GAAGH,MAAM,CAACI,KAA1B;AACA,YAAMC,MAAM,GAAGF,UAAU,CAACG,WAAX,CAAuB,iBAAvB,CAAf;AACAb,MAAAA,cAAc,GAAGF,eAAe,CAACG,QAAD,EAAWW,MAAX,CAAhC;AACAV,MAAAA,WAAW,GAAGU,MAAM,CAACE,MAAP,GAAgB,CAA9B;AAEAX,MAAAA,WAAW,GAAGK,KAAK,GAAG,GAAtB;AACAJ,MAAAA,YAAY,GAAIQ,MAAM,CAAC,CAAD,CAAN,CAAUH,MAAV,GAAmBN,WAApB,GAAmCS,MAAM,CAAC,CAAD,CAAN,CAAUJ,KAA5D;AACD,KATI;;AAULO,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAA4B;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBX,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,KAA5B,EAA8D;AAClES,MAAAA,KAAK,CAACE,aAAN,CAAoBD,MAAM,CAACE,QAA3B;AACAH,MAAAA,KAAK,CAACI,KAAN;AACAJ,MAAAA,KAAK,CAACK,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;;AACA,WAAK,IAAIC,CAAC,GAAGP,cAAc,CAACH,MAAf,GAAwB,CAArC,EAAwCU,CAAC,IAAI,CAA7C,EAAgDA,CAAC,EAAjD,EAAqD;AACnDP,QAAAA,cAAc,CAACO,CAAD,CAAd,CAAkBC,SAAlB,IAA+BT,KAA/B;AACAhB,QAAAA,cAAc,CACX0B,WADH,CACeT,cAAc,CAACO,CAAD,CAAd,CAAkBC,SADjC,EAC4C,CAD5C,EAEGE,IAFH,CAGIT,KAHJ,EAIID,cAAc,CAACO,CAAD,CAAd,CAAkBI,CAAlB,GAAsBzB,WAAW,GAAG,GAJxC,EAKIc,cAAc,CAACO,CAAD,CAAd,CAAkBK,CAAlB,GAAsBzB,YAAY,GAAG,CALzC,EAMID,WANJ,EAOIC,YAPJ;;AAUA,YAAIa,cAAc,CAACO,CAAD,CAAd,CAAkBC,SAAlB,GAA8BxB,QAAQ,GAAGC,WAA7C,EAA0D;AACxDe,UAAAA,cAAc,CAACa,MAAf,CAAsBN,CAAtB,EAAyB,CAAzB;AACD;AACF;;AACDN,MAAAA,KAAK,CAACa,GAAN;AACD;;AA/BI,GAAP;AAiCD,CAtCD;;AAwCA,eAAehC,4BAAf","sourcesContent":["import { createAnimation } from \"gdxjs\";\r\n\r\nconst createWhiteSmokeRenderSystem = () => {\r\n  let smokeAnimation;\r\n  const duration = 0.05;\r\n  let frameLength = 0;\r\n  let SMOKE_WIDTH, SMOKE_HEIGHT;\r\n  return {\r\n    init(worldState, { assets, width, height }) {\r\n      const smokeAtlas = assets.smoke;\r\n      const effect = smokeAtlas.findRegions(\"effect boc khoi\");\r\n      smokeAnimation = createAnimation(duration, effect);\r\n      frameLength = effect.length - 1;\r\n\r\n      SMOKE_WIDTH = width * 0.7;\r\n      SMOKE_HEIGHT = (effect[0].height * SMOKE_WIDTH) / effect[0].width;\r\n    },\r\n    update(delta, { whiteSmokeList }, { batch, camera, width, height }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(1, 1, 1, 1);\r\n      for (let i = whiteSmokeList.length - 1; i >= 0; i--) {\r\n        whiteSmokeList[i].stateTime += delta;\r\n        smokeAnimation\r\n          .getKeyFrame(whiteSmokeList[i].stateTime, 1)\r\n          .draw(\r\n            batch,\r\n            whiteSmokeList[i].x - SMOKE_WIDTH / 2.5,\r\n            whiteSmokeList[i].y - SMOKE_HEIGHT / 3,\r\n            SMOKE_WIDTH,\r\n            SMOKE_HEIGHT\r\n          );\r\n\r\n        if (whiteSmokeList[i].stateTime > duration * frameLength) {\r\n          whiteSmokeList.splice(i, 1);\r\n        }\r\n      }\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createWhiteSmokeRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}