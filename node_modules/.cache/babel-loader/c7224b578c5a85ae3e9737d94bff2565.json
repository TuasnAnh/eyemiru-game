{"ast":null,"code":"import{Vector2}from\"gdxjs\";var createStarEffectRenderSystem=function createStarEffectRenderSystem(){var startTex;var S1_WIDTH,S1_HEIGHT,S2_WIDTH,S2_HEIGHT;var tmp=new Vector2();return{init:function init(worldState,_ref){var assets=_ref.assets,width=_ref.width,height=_ref.height;var atlas=assets.gameAssets;startTex=atlas.findRegion(\"star\",-1);S1_WIDTH=width/6;S1_HEIGHT=S1_WIDTH*startTex.height/startTex.width;S2_WIDTH=width/6;S2_HEIGHT=S1_WIDTH*startTex.height/startTex.width;},update:function update(delta,_ref2,_ref3){var starList=_ref2.starList,basketState=_ref2.basketState;var batch=_ref3.batch,camera=_ref3.camera,width=_ref3.width,height=_ref3.height;batch.setProjection(camera.combined);batch.begin();for(var i=starList.length-1;i>=0;i--){if(starList[i].type===0){starList[i].stateTime+=delta;starList[i].accuX+=delta*starList[i].speedX;if(starList[i].accuX<basketState.width*2/3){starList[i].scale+=delta*starList[i].scaleSpeed;}else{starList[i].scale-=delta*starList[i].scaleSpeed*1.5;}startTex.draw(batch,basketState.x-basketState.width/2+starList[i].accuX-S2_WIDTH/2,basketState.y-basketState.height*0.7-S2_HEIGHT/2,S2_WIDTH,S2_HEIGHT,S2_WIDTH/2,S2_HEIGHT/2,0,starList[i].scale,starList[i].scale);if(starList[i].stateTime>starList[i].time){starList.splice(i,1);}}else{var count=0;for(var j=2;j>=0;j--){if(starList[i].stateTime[j]<=starList[i].time[j]){starList[i].stateTime[j]+=delta;var target=starList[i].target[j];var position=starList[i].position[j];tmp.setVector(target).subVector(position).nor().scale(starList[i].speed[j]*delta);if(target.distanceSqr(position)<=tmp.len2()){starList[i].position[j].setVector(starList[i].target[j]);}else{starList[i].position[j].addVector(tmp);}starList[i].scale[j]-=delta*starList[i].scaleSpeed[j];startTex.draw(batch,starList[i].position[j].x-S1_WIDTH/2,starList[i].position[j].y-S1_HEIGHT/2,S1_WIDTH,S1_HEIGHT,S1_WIDTH/2,S1_HEIGHT/2,0,starList[i].scale[j],starList[i].scale[j]);}else{count+=1;}}if(count===3){starList.splice(i,1);}}}batch.end();}};};export default createStarEffectRenderSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/StarEffectRenderSystem.js"],"names":["Vector2","createStarEffectRenderSystem","startTex","S1_WIDTH","S1_HEIGHT","S2_WIDTH","S2_HEIGHT","tmp","init","worldState","assets","width","height","atlas","gameAssets","findRegion","update","delta","starList","basketState","batch","camera","setProjection","combined","begin","i","length","type","stateTime","accuX","speedX","scale","scaleSpeed","draw","x","y","time","splice","count","j","target","position","setVector","subVector","nor","speed","distanceSqr","len2","addVector","end"],"mappings":"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","sourcesContent":["import { Vector2 } from \"gdxjs\";\r\n\r\nconst createStarEffectRenderSystem = () => {\r\n  let startTex;\r\n  let S1_WIDTH, S1_HEIGHT, S2_WIDTH, S2_HEIGHT;\r\n  let tmp = new Vector2();\r\n  return {\r\n    init(worldState, { assets, width, height }) {\r\n      const atlas = assets.gameAssets;\r\n      startTex = atlas.findRegion(\"star\", -1);\r\n\r\n      S1_WIDTH = width / 6;\r\n      S1_HEIGHT = (S1_WIDTH * startTex.height) / startTex.width;\r\n\r\n      S2_WIDTH = width / 6;\r\n      S2_HEIGHT = (S1_WIDTH * startTex.height) / startTex.width;\r\n    },\r\n    update(delta, { starList, basketState }, { batch, camera, width, height }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n\r\n      for (let i = starList.length - 1; i >= 0; i--) {\r\n        if (starList[i].type === 0) {\r\n          starList[i].stateTime += delta;\r\n          starList[i].accuX += delta * starList[i].speedX;\r\n          if (starList[i].accuX < (basketState.width * 2) / 3) {\r\n            starList[i].scale += delta * starList[i].scaleSpeed;\r\n          } else {\r\n            starList[i].scale -= delta * starList[i].scaleSpeed * 1.5;\r\n          }\r\n          startTex.draw(\r\n            batch,\r\n            basketState.x -\r\n              basketState.width / 2 +\r\n              starList[i].accuX -\r\n              S2_WIDTH / 2,\r\n            basketState.y - basketState.height * 0.7 - S2_HEIGHT / 2,\r\n            S2_WIDTH,\r\n            S2_HEIGHT,\r\n            S2_WIDTH / 2,\r\n            S2_HEIGHT / 2,\r\n            0,\r\n            starList[i].scale,\r\n            starList[i].scale\r\n          );\r\n\r\n          if (starList[i].stateTime > starList[i].time) {\r\n            starList.splice(i, 1);\r\n          }\r\n        } else {\r\n          let count = 0;\r\n          for (let j = 2; j >= 0; j--) {\r\n            if (starList[i].stateTime[j] <= starList[i].time[j]) {\r\n              starList[i].stateTime[j] += delta;\r\n              const target = starList[i].target[j];\r\n              const position = starList[i].position[j];\r\n              tmp\r\n                .setVector(target)\r\n                .subVector(position)\r\n                .nor()\r\n                .scale(starList[i].speed[j] * delta);\r\n              if (target.distanceSqr(position) <= tmp.len2()) {\r\n                starList[i].position[j].setVector(starList[i].target[j]);\r\n              } else {\r\n                starList[i].position[j].addVector(tmp);\r\n              }\r\n\r\n              starList[i].scale[j] -= delta * starList[i].scaleSpeed[j];\r\n              startTex.draw(\r\n                batch,\r\n                starList[i].position[j].x - S1_WIDTH / 2,\r\n                starList[i].position[j].y - S1_HEIGHT / 2,\r\n                S1_WIDTH,\r\n                S1_HEIGHT,\r\n                S1_WIDTH / 2,\r\n                S1_HEIGHT / 2,\r\n                0,\r\n                starList[i].scale[j],\r\n                starList[i].scale[j]\r\n              );\r\n            } else {\r\n              count += 1;\r\n            }\r\n          }\r\n          if (count === 3) {\r\n            starList.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createStarEffectRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}