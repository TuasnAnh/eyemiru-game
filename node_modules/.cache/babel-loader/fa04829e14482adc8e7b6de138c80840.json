{"ast":null,"code":"import{Vector2}from\"gdxjs\";var createBasketPositionSystem=function createBasketPositionSystem(){var tmp=new Vector2();return{update:function update(delta,_ref,_ref2){var basketState=_ref.basketState;var batch=_ref2.batch,width=_ref2.width,height=_ref2.height,camera=_ref2.camera;tmp.setVector(basketState.target).subVector(basketState.position).nor().scale(basketState.speed*delta);if(basketState.target.distanceSqr(basketState.position)<=tmp.len2()){basketState.position.setVector(basketState.target);}else{basketState.position.addVector(tmp);}basketState.x=basketState.position.x;if(basketState.x<=basketState.width/2){basketState.x=basketState.width/2;}if(basketState.x>=width-basketState.width/2){basketState.x=width-basketState.width/2;}}};};export default createBasketPositionSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/BasketPositionSystem.js"],"names":["Vector2","createBasketPositionSystem","tmp","update","delta","basketState","batch","width","height","camera","setVector","target","subVector","position","nor","scale","speed","distanceSqr","len2","addVector","x"],"mappings":"AAAA,OAASA,OAAT,KAAwB,OAAxB,CAEA,GAAMC,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAM,CACvC,GAAIC,CAAAA,GAAG,CAAG,GAAIF,CAAAA,OAAJ,EAAV,CAEA,MAAO,CACLG,MADK,iBACEC,KADF,YAC4D,IAAjDC,CAAAA,WAAiD,MAAjDA,WAAiD,IAAhCC,CAAAA,KAAgC,OAAhCA,KAAgC,CAAzBC,KAAyB,OAAzBA,KAAyB,CAAlBC,MAAkB,OAAlBA,MAAkB,CAAVC,MAAU,OAAVA,MAAU,CAC/DP,GAAG,CACAQ,SADH,CACaL,WAAW,CAACM,MADzB,EAEGC,SAFH,CAEaP,WAAW,CAACQ,QAFzB,EAGGC,GAHH,GAIGC,KAJH,CAISV,WAAW,CAACW,KAAZ,CAAoBZ,KAJ7B,EAKA,GAAIC,WAAW,CAACM,MAAZ,CAAmBM,WAAnB,CAA+BZ,WAAW,CAACQ,QAA3C,GAAwDX,GAAG,CAACgB,IAAJ,EAA5D,CAAwE,CACtEb,WAAW,CAACQ,QAAZ,CAAqBH,SAArB,CAA+BL,WAAW,CAACM,MAA3C,EACD,CAFD,IAEO,CACLN,WAAW,CAACQ,QAAZ,CAAqBM,SAArB,CAA+BjB,GAA/B,EACD,CAEDG,WAAW,CAACe,CAAZ,CAAgBf,WAAW,CAACQ,QAAZ,CAAqBO,CAArC,CACA,GAAIf,WAAW,CAACe,CAAZ,EAAiBf,WAAW,CAACE,KAAZ,CAAoB,CAAzC,CAA4C,CAC1CF,WAAW,CAACe,CAAZ,CAAgBf,WAAW,CAACE,KAAZ,CAAoB,CAApC,CACD,CACD,GAAIF,WAAW,CAACe,CAAZ,EAAiBb,KAAK,CAAGF,WAAW,CAACE,KAAZ,CAAoB,CAAjD,CAAoD,CAClDF,WAAW,CAACe,CAAZ,CAAgBb,KAAK,CAAGF,WAAW,CAACE,KAAZ,CAAoB,CAA5C,CACD,CACF,CApBI,CAAP,CAsBD,CAzBD,CA2BA,cAAeN,CAAAA,0BAAf","sourcesContent":["import { Vector2 } from \"gdxjs\";\r\n\r\nconst createBasketPositionSystem = () => {\r\n  let tmp = new Vector2();\r\n\r\n  return {\r\n    update(delta, { basketState }, { batch, width, height, camera }) {\r\n      tmp\r\n        .setVector(basketState.target)\r\n        .subVector(basketState.position)\r\n        .nor()\r\n        .scale(basketState.speed * delta);\r\n      if (basketState.target.distanceSqr(basketState.position) <= tmp.len2()) {\r\n        basketState.position.setVector(basketState.target);\r\n      } else {\r\n        basketState.position.addVector(tmp);\r\n      }\r\n\r\n      basketState.x = basketState.position.x;\r\n      if (basketState.x <= basketState.width / 2) {\r\n        basketState.x = basketState.width / 2;\r\n      }\r\n      if (basketState.x >= width - basketState.width / 2) {\r\n        basketState.x = width - basketState.width / 2;\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBasketPositionSystem;\r\n"]},"metadata":{},"sourceType":"module"}