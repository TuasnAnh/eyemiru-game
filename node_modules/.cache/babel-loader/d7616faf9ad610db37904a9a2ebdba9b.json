{"ast":null,"code":"import{AlignMode,TextType}from\"../utils/loadFontFile\";var createScoreRenderSystem=function createScoreRenderSystem(){var scoreText,logo,scoreTex;var LG_WIDTH,LG_HEIGHT,S_WIDTH,S_HEIGHT;return{init:function init(worldState,_ref){var font=_ref.font,width=_ref.width,height=_ref.height,assets=_ref.assets;var atlas=assets.gameAssets;logo=atlas.findRegion(\"logo\",-1);scoreTex=atlas.findRegion(\"score\",-1);LG_WIDTH=width/2;LG_HEIGHT=LG_WIDTH*logo.height/logo.width;S_WIDTH=width/5;S_HEIGHT=S_WIDTH*scoreTex.height/scoreTex.width;scoreText=font.setNewText(width);scoreText.setAlignMode(AlignMode.left);scoreText.setType(TextType.dynamic);},update:function update(delta,_ref2,_ref3){var score=_ref2.score;var batch=_ref3.batch,camera=_ref3.camera,width=_ref3.width,height=_ref3.height;batch.setProjection(camera.combined);batch.begin();batch.setColor(0.502,0.867,0.216,1);scoreText.draw(batch,\"\".concat(score),width/3.2,height/10,width/9.3);batch.setColor(1,1,1,1);logo.draw(batch,width/12,height/35,LG_WIDTH,LG_HEIGHT);scoreTex.draw(batch,width/12,height/9,S_WIDTH,S_HEIGHT);batch.end();}};};export default createScoreRenderSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/ScoreRenderSystem.js"],"names":["AlignMode","TextType","createScoreRenderSystem","scoreText","logo","scoreTex","LG_WIDTH","LG_HEIGHT","S_WIDTH","S_HEIGHT","init","worldState","font","width","height","assets","atlas","gameAssets","findRegion","setNewText","setAlignMode","left","setType","dynamic","update","delta","score","batch","camera","setProjection","combined","begin","setColor","draw","end"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,uBAApC,CAEA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,EAAM,CACpC,GAAIC,CAAAA,SAAJ,CAAeC,IAAf,CAAqBC,QAArB,CACA,GAAIC,CAAAA,QAAJ,CAAcC,SAAd,CAAyBC,OAAzB,CAAkCC,QAAlC,CACA,MAAO,CACLC,IADK,eACAC,UADA,MAC6C,IAA/BC,CAAAA,IAA+B,MAA/BA,IAA+B,CAAzBC,KAAyB,MAAzBA,KAAyB,CAAlBC,MAAkB,MAAlBA,MAAkB,CAAVC,MAAU,MAAVA,MAAU,CAChD,GAAIC,CAAAA,KAAK,CAAGD,MAAM,CAACE,UAAnB,CACAb,IAAI,CAAGY,KAAK,CAACE,UAAN,CAAiB,MAAjB,CAAyB,CAAC,CAA1B,CAAP,CACAb,QAAQ,CAAGW,KAAK,CAACE,UAAN,CAAiB,OAAjB,CAA0B,CAAC,CAA3B,CAAX,CAEAZ,QAAQ,CAAGO,KAAK,CAAG,CAAnB,CACAN,SAAS,CAAID,QAAQ,CAAGF,IAAI,CAACU,MAAjB,CAA2BV,IAAI,CAACS,KAA5C,CAEAL,OAAO,CAAGK,KAAK,CAAG,CAAlB,CACAJ,QAAQ,CAAID,OAAO,CAAGH,QAAQ,CAACS,MAApB,CAA8BT,QAAQ,CAACQ,KAAlD,CAEAV,SAAS,CAAGS,IAAI,CAACO,UAAL,CAAgBN,KAAhB,CAAZ,CACAV,SAAS,CAACiB,YAAV,CAAuBpB,SAAS,CAACqB,IAAjC,EACAlB,SAAS,CAACmB,OAAV,CAAkBrB,QAAQ,CAACsB,OAA3B,EACD,CAfI,CAgBLC,MAhBK,iBAgBEC,KAhBF,aAgBsD,IAA3CC,CAAAA,KAA2C,OAA3CA,KAA2C,IAAhCC,CAAAA,KAAgC,OAAhCA,KAAgC,CAAzBC,MAAyB,OAAzBA,MAAyB,CAAjBf,KAAiB,OAAjBA,KAAiB,CAAVC,MAAU,OAAVA,MAAU,CACzDa,KAAK,CAACE,aAAN,CAAoBD,MAAM,CAACE,QAA3B,EACAH,KAAK,CAACI,KAAN,GACAJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CAAoC,CAApC,EACA7B,SAAS,CAAC8B,IAAV,CAAeN,KAAf,WAAyBD,KAAzB,EAAkCb,KAAK,CAAG,GAA1C,CAA+CC,MAAM,CAAG,EAAxD,CAA4DD,KAAK,CAAG,GAApE,EACAc,KAAK,CAACK,QAAN,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAAwB,CAAxB,EACA5B,IAAI,CAAC6B,IAAL,CAAUN,KAAV,CAAiBd,KAAK,CAAG,EAAzB,CAA6BC,MAAM,CAAG,EAAtC,CAA0CR,QAA1C,CAAoDC,SAApD,EACAF,QAAQ,CAAC4B,IAAT,CAAcN,KAAd,CAAqBd,KAAK,CAAG,EAA7B,CAAiCC,MAAM,CAAG,CAA1C,CAA6CN,OAA7C,CAAsDC,QAAtD,EACAkB,KAAK,CAACO,GAAN,GACD,CAzBI,CAAP,CA2BD,CA9BD,CAgCA,cAAehC,CAAAA,uBAAf","sourcesContent":["import { AlignMode, TextType } from \"../utils/loadFontFile\";\r\n\r\nconst createScoreRenderSystem = () => {\r\n  let scoreText, logo, scoreTex;\r\n  let LG_WIDTH, LG_HEIGHT, S_WIDTH, S_HEIGHT;\r\n  return {\r\n    init(worldState, { font, width, height, assets }) {\r\n      let atlas = assets.gameAssets;\r\n      logo = atlas.findRegion(\"logo\", -1);\r\n      scoreTex = atlas.findRegion(\"score\", -1);\r\n\r\n      LG_WIDTH = width / 2;\r\n      LG_HEIGHT = (LG_WIDTH * logo.height) / logo.width;\r\n\r\n      S_WIDTH = width / 5;\r\n      S_HEIGHT = (S_WIDTH * scoreTex.height) / scoreTex.width;\r\n\r\n      scoreText = font.setNewText(width);\r\n      scoreText.setAlignMode(AlignMode.left);\r\n      scoreText.setType(TextType.dynamic);\r\n    },\r\n    update(delta, { score }, { batch, camera, width, height }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(0.502, 0.867, 0.216, 1);\r\n      scoreText.draw(batch, `${score}`, width / 3.2, height / 10, width / 9.3);\r\n      batch.setColor(1, 1, 1, 1);\r\n      logo.draw(batch, width / 12, height / 35, LG_WIDTH, LG_HEIGHT);\r\n      scoreTex.draw(batch, width / 12, height / 9, S_WIDTH, S_HEIGHT);\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createScoreRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}