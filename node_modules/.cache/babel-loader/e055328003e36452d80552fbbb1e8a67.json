{"ast":null,"code":"const createBasketCollideSystem = () => {\n  return {\n    update(delta, worldState, {\n      width\n    }) {\n      const {\n        basketState,\n        products,\n        collection,\n        life,\n        starList\n      } = worldState;\n      let got = false;\n\n      for (let i = products.length - 1; i >= 0; i--) {\n        if (products[i].x > basketState.x - basketState.width / 2 && products[i].x < basketState.x + basketState.width / 2 && products[i].y > basketState.y - basketState.height * 0.7 && products[i].y < basketState.y - basketState.height * 0.6) {\n          if (!products[i].isFake && !worldState.correctCatch) {\n            console.log(\"hit\");\n            worldState.correctCatch = true;\n\n            for (let j = 0; j < collection.length; j++) {\n              if (collection[j].type === products[i].type && !collection[j].enable && !got) {\n                got = true;\n                collection[j].enable = true;\n              }\n            } // 0: 1 star --- 1: 3 stars\n\n\n            if (products[i].type === 2) {\n              const time = 0.3;\n              const speedX = basketState.width / time;\n              const scaleSpeed = (1 - 0) / (2 / 3 * time);\n              starList.push({\n                type: 0,\n                stateTime: 0,\n                time,\n                scale: 0,\n                scaleSpeed,\n                speedX,\n                accuX: 0 // value\n\n              });\n            } else {\n              const time = [Math.random() * (1 - 0.5) + 0.5, Math.random() * (1 - 0.5) + 0.5, Math.random() * (1 - 0.5) + 0.5];\n              const targetX = [Math.random() * width, Math.random() * width, Math.random() * width];\n              let speedX = [];\n              let speedY = [];\n\n              for (let t of time) {\n                speedX.push();\n              }\n\n              starList.push({\n                type: 1 // value\n\n              });\n            }\n\n            products.splice(i, 1);\n            break; // if there is any one match => break the loop\n          } //wrong catch\n\n\n          if (products[i].isFake) {\n            console.log(\"miss\");\n            life[worldState.lifeIndex].open = false;\n            worldState.lifeIndex = Math.max(0, worldState.lifeIndex -= 1);\n            worldState.stunScreen.check = true;\n            products.splice(i, 1);\n          }\n        }\n      }\n    }\n\n  };\n};\n\nexport default createBasketCollideSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/BasketCollideSystem.js"],"names":["createBasketCollideSystem","update","delta","worldState","width","basketState","products","collection","life","starList","got","i","length","x","y","height","isFake","correctCatch","console","log","j","type","enable","time","speedX","scaleSpeed","push","stateTime","scale","accuX","Math","random","targetX","speedY","t","splice","lifeIndex","open","max","stunScreen","check"],"mappings":"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","sourcesContent":["const createBasketCollideSystem = () => {\r\n  return {\r\n    update(delta, worldState, { width }) {\r\n      const { basketState, products, collection, life, starList } = worldState;\r\n\r\n      let got = false;\r\n      for (let i = products.length - 1; i >= 0; i--) {\r\n        if (\r\n          products[i].x > basketState.x - basketState.width / 2 &&\r\n          products[i].x < basketState.x + basketState.width / 2 &&\r\n          products[i].y > basketState.y - basketState.height * 0.7 &&\r\n          products[i].y < basketState.y - basketState.height * 0.6\r\n        ) {\r\n          if (!products[i].isFake && !worldState.correctCatch) {\r\n            console.log(\"hit\");\r\n            worldState.correctCatch = true;\r\n            for (let j = 0; j < collection.length; j++) {\r\n              if (\r\n                collection[j].type === products[i].type &&\r\n                !collection[j].enable &&\r\n                !got\r\n              ) {\r\n                got = true;\r\n                collection[j].enable = true;\r\n              }\r\n            }\r\n\r\n            // 0: 1 star --- 1: 3 stars\r\n            if (products[i].type === 2) {\r\n              const time = 0.3;\r\n              const speedX = basketState.width / time;\r\n              const scaleSpeed = (1 - 0) / ((2 / 3) * time);\r\n              starList.push({\r\n                type: 0,\r\n                stateTime: 0,\r\n                time,\r\n                scale: 0,\r\n                scaleSpeed,\r\n                speedX,\r\n                accuX: 0,\r\n                // value\r\n              });\r\n            } else {\r\n              const time = [\r\n                Math.random() * (1 - 0.5) + 0.5,\r\n                Math.random() * (1 - 0.5) + 0.5,\r\n                Math.random() * (1 - 0.5) + 0.5,\r\n              ];\r\n              const targetX = [\r\n                Math.random() * width,\r\n                Math.random() * width,\r\n                Math.random() * width,\r\n              ];\r\n              let speedX = [];\r\n              let speedY = [];\r\n              for (let t of time) {\r\n                speedX.push();\r\n              }\r\n              starList.push({\r\n                type: 1,\r\n                // value\r\n              });\r\n            }\r\n\r\n            products.splice(i, 1);\r\n            break; // if there is any one match => break the loop\r\n          }\r\n\r\n          //wrong catch\r\n          if (products[i].isFake) {\r\n            console.log(\"miss\");\r\n            life[worldState.lifeIndex].open = false;\r\n            worldState.lifeIndex = Math.max(0, (worldState.lifeIndex -= 1));\r\n            worldState.stunScreen.check = true;\r\n            products.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBasketCollideSystem;\r\n"]},"metadata":{},"sourceType":"module"}