{"ast":null,"code":"import { AlignMode, TextType } from \"../utils/loadFontFile\";\n\nconst createScoreRenderSystem = () => {\n  let scoreText;\n  return {\n    init(worldState, {\n      font,\n      width,\n      height\n    }) {\n      scoreText = font.setNewText(width);\n      scoreText.setAlignMode(AlignMode.left);\n      scoreText.setType(TextType.dynamic);\n    },\n\n    update(delta, {\n      score\n    }, {\n      batch,\n      camera,\n      width,\n      height\n    }) {\n      batch.setProjection(camera.combined);\n      batch.begin();\n      batch.setColor(0, 0, 0, 1);\n      scoreText.draw(batch, `${score}`, width / 20, height / 20, width / 8);\n      batch.end();\n    }\n\n  };\n};\n\nexport default createScoreRenderSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/ScoreRenderSystem.js"],"names":["AlignMode","TextType","createScoreRenderSystem","scoreText","init","worldState","font","width","height","setNewText","setAlignMode","left","setType","dynamic","update","delta","score","batch","camera","setProjection","combined","begin","setColor","draw","end"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,uBAApC;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AACpC,MAAIC,SAAJ;AAEA,SAAO;AACLC,IAAAA,IAAI,CAACC,UAAD,EAAa;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAb,EAAsC;AACxCL,MAAAA,SAAS,GAAGG,IAAI,CAACG,UAAL,CAAgBF,KAAhB,CAAZ;AACAJ,MAAAA,SAAS,CAACO,YAAV,CAAuBV,SAAS,CAACW,IAAjC;AACAR,MAAAA,SAAS,CAACS,OAAV,CAAkBX,QAAQ,CAACY,OAA3B;AACD,KALI;;AAMLC,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAmB;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBX,MAAAA,KAAjB;AAAwBC,MAAAA;AAAxB,KAAnB,EAAqD;AACzDS,MAAAA,KAAK,CAACE,aAAN,CAAoBD,MAAM,CAACE,QAA3B;AACAH,MAAAA,KAAK,CAACI,KAAN;AACAJ,MAAAA,KAAK,CAACK,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AAEAnB,MAAAA,SAAS,CAACoB,IAAV,CAAeN,KAAf,EAAuB,GAAED,KAAM,EAA/B,EAAkCT,KAAK,GAAG,EAA1C,EAA8CC,MAAM,GAAG,EAAvD,EAA2DD,KAAK,GAAG,CAAnE;AAEAU,MAAAA,KAAK,CAACO,GAAN;AACD;;AAdI,GAAP;AAgBD,CAnBD;;AAqBA,eAAetB,uBAAf","sourcesContent":["import { AlignMode, TextType } from \"../utils/loadFontFile\";\r\n\r\nconst createScoreRenderSystem = () => {\r\n  let scoreText;\r\n\r\n  return {\r\n    init(worldState, { font, width, height }) {\r\n      scoreText = font.setNewText(width);\r\n      scoreText.setAlignMode(AlignMode.left);\r\n      scoreText.setType(TextType.dynamic);\r\n    },\r\n    update(delta, { score }, { batch, camera, width, height }) {\r\n      batch.setProjection(camera.combined);\r\n      batch.begin();\r\n      batch.setColor(0, 0, 0, 1);\r\n\r\n      scoreText.draw(batch, `${score}`, width / 20, height / 20, width / 8);\r\n\r\n      batch.end();\r\n    },\r\n  };\r\n};\r\n\r\nexport default createScoreRenderSystem;\r\n"]},"metadata":{},"sourceType":"module"}