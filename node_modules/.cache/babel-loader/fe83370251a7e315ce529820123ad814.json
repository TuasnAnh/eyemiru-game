{"ast":null,"code":"const createBasketCollideSystem = () => {\n  return {\n    update(delta, worldState, extra) {\n      const {\n        basketState,\n        products,\n        collection,\n        life,\n        starList\n      } = worldState;\n\n      for (let i = products.length - 1; i >= 0; i--) {\n        if (products[i].x > basketState.x - basketState.width / 2 && products[i].x < basketState.x + basketState.width / 2 && products[i].y > basketState.y - basketState.height * 0.7 && products[i].y < basketState.y - basketState.height * 0.6) {\n          if (!products[i].isFake && !worldState.correctCatch) {\n            console.log(\"hit\");\n            worldState.correctCatch = true;\n\n            for (let j = 0; j < collection.length; j++) if (collection[worldState.currCollect].type === products[i].type) {\n              console.log(\"done\");\n              worldState.currCollect = Math.min(worldState.currCollect += 1, collection.length - 1);\n              collection[worldState.currCollect].enable = true;\n            }\n\n            starList.push({// value\n            });\n            products.splice(i, 1);\n            break; // if there is any one match => break the loop\n          } //wrong catch\n\n\n          if (products[i].isFake) {\n            console.log(\"miss\");\n            life[worldState.lifeIndex].open = false;\n            worldState.lifeIndex = Math.max(0, worldState.lifeIndex -= 1);\n            worldState.stunScreen.check = true;\n            products.splice(i, 1);\n          }\n        }\n      }\n    }\n\n  };\n};\n\nexport default createBasketCollideSystem;","map":{"version":3,"sources":["E:/game-project/eyemiru/src/systems/BasketCollideSystem.js"],"names":["createBasketCollideSystem","update","delta","worldState","extra","basketState","products","collection","life","starList","i","length","x","width","y","height","isFake","correctCatch","console","log","j","currCollect","type","Math","min","enable","push","splice","lifeIndex","open","max","stunScreen","check"],"mappings":"AAAA,MAAMA,yBAAyB,GAAG,MAAM;AACtC,SAAO;AACLC,IAAAA,MAAM,CAACC,KAAD,EAAQC,UAAR,EAAoBC,KAApB,EAA2B;AAC/B,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA,UAAzB;AAAqCC,QAAAA,IAArC;AAA2CC,QAAAA;AAA3C,UAAwDN,UAA9D;;AAEA,WAAK,IAAIO,CAAC,GAAGJ,QAAQ,CAACK,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7C,YACEJ,QAAQ,CAACI,CAAD,CAAR,CAAYE,CAAZ,GAAgBP,WAAW,CAACO,CAAZ,GAAgBP,WAAW,CAACQ,KAAZ,GAAoB,CAApD,IACAP,QAAQ,CAACI,CAAD,CAAR,CAAYE,CAAZ,GAAgBP,WAAW,CAACO,CAAZ,GAAgBP,WAAW,CAACQ,KAAZ,GAAoB,CADpD,IAEAP,QAAQ,CAACI,CAAD,CAAR,CAAYI,CAAZ,GAAgBT,WAAW,CAACS,CAAZ,GAAgBT,WAAW,CAACU,MAAZ,GAAqB,GAFrD,IAGAT,QAAQ,CAACI,CAAD,CAAR,CAAYI,CAAZ,GAAgBT,WAAW,CAACS,CAAZ,GAAgBT,WAAW,CAACU,MAAZ,GAAqB,GAJvD,EAKE;AACA,cAAI,CAACT,QAAQ,CAACI,CAAD,CAAR,CAAYM,MAAb,IAAuB,CAACb,UAAU,CAACc,YAAvC,EAAqD;AACnDC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAhB,YAAAA,UAAU,CAACc,YAAX,GAA0B,IAA1B;;AACA,iBAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,UAAU,CAACI,MAA/B,EAAuCS,CAAC,EAAxC,EACE,IACEb,UAAU,CAACJ,UAAU,CAACkB,WAAZ,CAAV,CAAmCC,IAAnC,KAA4ChB,QAAQ,CAACI,CAAD,CAAR,CAAYY,IAD1D,EAEE;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAhB,cAAAA,UAAU,CAACkB,WAAX,GAAyBE,IAAI,CAACC,GAAL,CACtBrB,UAAU,CAACkB,WAAX,IAA0B,CADJ,EAEvBd,UAAU,CAACI,MAAX,GAAoB,CAFG,CAAzB;AAIAJ,cAAAA,UAAU,CAACJ,UAAU,CAACkB,WAAZ,CAAV,CAAmCI,MAAnC,GAA4C,IAA5C;AACD;;AAEHhB,YAAAA,QAAQ,CAACiB,IAAT,CAAc,CACZ;AADY,aAAd;AAIApB,YAAAA,QAAQ,CAACqB,MAAT,CAAgBjB,CAAhB,EAAmB,CAAnB;AACA,kBApBmD,CAoB5C;AACR,WAtBD,CAwBA;;;AACA,cAAIJ,QAAQ,CAACI,CAAD,CAAR,CAAYM,MAAhB,EAAwB;AACtBE,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAX,YAAAA,IAAI,CAACL,UAAU,CAACyB,SAAZ,CAAJ,CAA2BC,IAA3B,GAAkC,KAAlC;AACA1B,YAAAA,UAAU,CAACyB,SAAX,GAAuBL,IAAI,CAACO,GAAL,CAAS,CAAT,EAAa3B,UAAU,CAACyB,SAAX,IAAwB,CAArC,CAAvB;AACAzB,YAAAA,UAAU,CAAC4B,UAAX,CAAsBC,KAAtB,GAA8B,IAA9B;AACA1B,YAAAA,QAAQ,CAACqB,MAAT,CAAgBjB,CAAhB,EAAmB,CAAnB;AACD;AACF;AACF;AACF;;AA5CI,GAAP;AA8CD,CA/CD;;AAiDA,eAAeV,yBAAf","sourcesContent":["const createBasketCollideSystem = () => {\r\n  return {\r\n    update(delta, worldState, extra) {\r\n      const { basketState, products, collection, life, starList } = worldState;\r\n\r\n      for (let i = products.length - 1; i >= 0; i--) {\r\n        if (\r\n          products[i].x > basketState.x - basketState.width / 2 &&\r\n          products[i].x < basketState.x + basketState.width / 2 &&\r\n          products[i].y > basketState.y - basketState.height * 0.7 &&\r\n          products[i].y < basketState.y - basketState.height * 0.6\r\n        ) {\r\n          if (!products[i].isFake && !worldState.correctCatch) {\r\n            console.log(\"hit\");\r\n            worldState.correctCatch = true;\r\n            for (let j = 0; j < collection.length; j++)\r\n              if (\r\n                collection[worldState.currCollect].type === products[i].type\r\n              ) {\r\n                console.log(\"done\");\r\n                worldState.currCollect = Math.min(\r\n                  (worldState.currCollect += 1),\r\n                  collection.length - 1\r\n                );\r\n                collection[worldState.currCollect].enable = true;\r\n              }\r\n\r\n            starList.push({\r\n              // value\r\n            });\r\n\r\n            products.splice(i, 1);\r\n            break; // if there is any one match => break the loop\r\n          }\r\n\r\n          //wrong catch\r\n          if (products[i].isFake) {\r\n            console.log(\"miss\");\r\n            life[worldState.lifeIndex].open = false;\r\n            worldState.lifeIndex = Math.max(0, (worldState.lifeIndex -= 1));\r\n            worldState.stunScreen.check = true;\r\n            products.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default createBasketCollideSystem;\r\n"]},"metadata":{},"sourceType":"module"}